{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash/assign');\n\nvar callbackToPromise = require('./callback_to_promise');\n\nfunction Record(table, recordId, recordJson) {\n  this._table = table;\n  this.id = recordId || recordJson.id;\n  this.setRawJson(recordJson);\n  this.save = callbackToPromise(save, this);\n  this.patchUpdate = callbackToPromise(patchUpdate, this);\n  this.putUpdate = callbackToPromise(putUpdate, this);\n  this.destroy = callbackToPromise(destroy, this);\n  this.fetch = callbackToPromise(fetch, this);\n  this.updateFields = this.patchUpdate;\n  this.replaceFields = this.putUpdate;\n}\n\nRecord.prototype.getId = function () {\n  return this.id;\n};\n\nRecord.prototype.get = function (columnName) {\n  return this.fields[columnName];\n};\n\nRecord.prototype.set = function (columnName, columnValue) {\n  this.fields[columnName] = columnValue;\n};\n\nfunction save(done) {\n  this.putUpdate(this.fields, done);\n}\n\nfunction patchUpdate(cellValuesByName, opts, done) {\n  var that = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('patch', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nfunction putUpdate(cellValuesByName, opts, done) {\n  var that = this;\n\n  if (!done) {\n    done = opts;\n    opts = {};\n  }\n\n  var updateBody = assign({\n    fields: cellValuesByName\n  }, opts);\n\n  this._table._base.runAction('put', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nfunction destroy(done) {\n  var that = this;\n\n  this._table._base.runAction('delete', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, null, function (err) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    done(null, that);\n  });\n}\n\nfunction fetch(done) {\n  var that = this;\n\n  this._table._base.runAction('get', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, null, function (err, response, results) {\n    if (err) {\n      done(err);\n      return;\n    }\n\n    that.setRawJson(results);\n    done(null, that);\n  });\n}\n\nRecord.prototype.setRawJson = function (rawJson) {\n  this._rawJson = rawJson;\n  this.fields = this._rawJson && this._rawJson.fields || {};\n};\n\nmodule.exports = Record;","map":{"version":3,"sources":["/Users/gauravsingh/Desktop/projects/Lucky-India/node_modules/airtable/lib/record.js"],"names":["assign","require","callbackToPromise","Record","table","recordId","recordJson","_table","id","setRawJson","save","patchUpdate","putUpdate","destroy","fetch","updateFields","replaceFields","prototype","getId","get","columnName","fields","set","columnValue","done","cellValuesByName","opts","that","updateBody","_base","runAction","_urlEncodedNameOrId","err","response","results","rawJson","_rawJson","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assign = require('lodash/assign');\n\nvar callbackToPromise = require('./callback_to_promise');\n\nfunction Record(table, recordId, recordJson) {\n    this._table = table;\n    this.id = recordId || recordJson.id;\n    this.setRawJson(recordJson);\n\n    this.save = callbackToPromise(save, this);\n    this.patchUpdate = callbackToPromise(patchUpdate, this);\n    this.putUpdate = callbackToPromise(putUpdate, this);\n    this.destroy = callbackToPromise(destroy, this);\n    this.fetch = callbackToPromise(fetch, this);\n\n    this.updateFields = this.patchUpdate;\n    this.replaceFields = this.putUpdate;\n}\n\nRecord.prototype.getId = function() {\n    return this.id;\n};\n\nRecord.prototype.get = function(columnName) {\n    return this.fields[columnName];\n};\n\nRecord.prototype.set = function(columnName, columnValue) {\n    this.fields[columnName] = columnValue;\n};\n\nfunction save(done) {\n    this.putUpdate(this.fields, done);\n}\n\nfunction patchUpdate(cellValuesByName, opts, done) {\n    var that = this;\n    if (!done) {\n        done = opts;\n        opts = {};\n    }\n    var updateBody = assign(\n        {\n            fields: cellValuesByName,\n        },\n        opts\n    );\n\n    this._table._base.runAction(\n        'patch',\n        '/' + this._table._urlEncodedNameOrId() + '/' + this.id,\n        {},\n        updateBody,\n        function(err, response, results) {\n            if (err) {\n                done(err);\n                return;\n            }\n\n            that.setRawJson(results);\n            done(null, that);\n        }\n    );\n}\n\nfunction putUpdate(cellValuesByName, opts, done) {\n    var that = this;\n    if (!done) {\n        done = opts;\n        opts = {};\n    }\n    var updateBody = assign(\n        {\n            fields: cellValuesByName,\n        },\n        opts\n    );\n    this._table._base.runAction(\n        'put',\n        '/' + this._table._urlEncodedNameOrId() + '/' + this.id,\n        {},\n        updateBody,\n        function(err, response, results) {\n            if (err) {\n                done(err);\n                return;\n            }\n\n            that.setRawJson(results);\n            done(null, that);\n        }\n    );\n}\n\nfunction destroy(done) {\n    var that = this;\n    this._table._base.runAction(\n        'delete',\n        '/' + this._table._urlEncodedNameOrId() + '/' + this.id,\n        {},\n        null,\n        function(err) {\n            if (err) {\n                done(err);\n                return;\n            }\n\n            done(null, that);\n        }\n    );\n}\n\nfunction fetch(done) {\n    var that = this;\n    this._table._base.runAction(\n        'get',\n        '/' + this._table._urlEncodedNameOrId() + '/' + this.id,\n        {},\n        null,\n        function(err, response, results) {\n            if (err) {\n                done(err);\n                return;\n            }\n\n            that.setRawJson(results);\n            done(null, that);\n        }\n    );\n}\n\nRecord.prototype.setRawJson = function(rawJson) {\n    this._rawJson = rawJson;\n    this.fields = (this._rawJson && this._rawJson.fields) || {};\n};\n\nmodule.exports = Record;\n"]},"metadata":{},"sourceType":"script"}