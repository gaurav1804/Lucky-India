{"ast":null,"code":"'use strict';\n\nvar isArray = require('lodash/isArray');\n\nvar forEach = require('lodash/forEach');\n\nvar isNil = require('lodash/isNil'); // Adapted from jQuery.param:\n// https://github.com/jquery/jquery/blob/2.2-stable/src/serialize.js\n\n\nfunction buildParams(prefix, obj, addFn) {\n  if (isArray(obj)) {\n    // Serialize array item.\n    forEach(obj, function (value, index) {\n      if (/\\[\\]$/.test(prefix)) {\n        // Treat each array item as a scalar.\n        addFn(prefix, value);\n      } else {\n        // Item is non-scalar (array or object), encode its numeric index.\n        buildParams(prefix + '[' + (typeof value === 'object' && value !== null ? index : '') + ']', value, addFn);\n      }\n    });\n  } else if (typeof obj === 'object') {\n    // Serialize object item.\n    forEach(obj, function (value, key) {\n      buildParams(prefix + '[' + key + ']', value, addFn);\n    });\n  } else {\n    // Serialize scalar item.\n    addFn(prefix, obj);\n  }\n}\n\nfunction objectToQueryParamString(obj) {\n  var parts = [];\n\n  var addFn = function (key, value) {\n    value = isNil(value) ? '' : value;\n    parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  };\n\n  forEach(obj, function (value, key) {\n    buildParams(key, value, addFn);\n  });\n  return parts.join('&').replace(/%20/g, '+');\n}\n\nmodule.exports = objectToQueryParamString;","map":{"version":3,"sources":["/Users/gauravsingh/Desktop/projects/Lucky-India/node_modules/airtable/lib/object_to_query_param_string.js"],"names":["isArray","require","forEach","isNil","buildParams","prefix","obj","addFn","value","index","test","key","objectToQueryParamString","parts","push","encodeURIComponent","join","replace","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASG,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AACrC,MAAIP,OAAO,CAACM,GAAD,CAAX,EAAkB;AACd;AACAJ,IAAAA,OAAO,CAACI,GAAD,EAAM,UAASE,KAAT,EAAgBC,KAAhB,EAAuB;AAChC,UAAI,QAAQC,IAAR,CAAaL,MAAb,CAAJ,EAA0B;AACtB;AACAE,QAAAA,KAAK,CAACF,MAAD,EAASG,KAAT,CAAL;AACH,OAHD,MAGO;AACH;AACAJ,QAAAA,WAAW,CACPC,MAAM,GAAG,GAAT,IAAgB,OAAOG,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,GAA8CC,KAA9C,GAAsD,EAAtE,IAA4E,GADrE,EAEPD,KAFO,EAGPD,KAHO,CAAX;AAKH;AACJ,KAZM,CAAP;AAaH,GAfD,MAeO,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAChC;AACAJ,IAAAA,OAAO,CAACI,GAAD,EAAM,UAASE,KAAT,EAAgBG,GAAhB,EAAqB;AAC9BP,MAAAA,WAAW,CAACC,MAAM,GAAG,GAAT,GAAeM,GAAf,GAAqB,GAAtB,EAA2BH,KAA3B,EAAkCD,KAAlC,CAAX;AACH,KAFM,CAAP;AAGH,GALM,MAKA;AACH;AACAA,IAAAA,KAAK,CAACF,MAAD,EAASC,GAAT,CAAL;AACH;AACJ;;AAED,SAASM,wBAAT,CAAkCN,GAAlC,EAAuC;AACnC,MAAIO,KAAK,GAAG,EAAZ;;AACA,MAAIN,KAAK,GAAG,UAASI,GAAT,EAAcH,KAAd,EAAqB;AAC7BA,IAAAA,KAAK,GAAGL,KAAK,CAACK,KAAD,CAAL,GAAe,EAAf,GAAoBA,KAA5B;AACAK,IAAAA,KAAK,CAACC,IAAN,CAAWC,kBAAkB,CAACJ,GAAD,CAAlB,GAA0B,GAA1B,GAAgCI,kBAAkB,CAACP,KAAD,CAA7D;AACH,GAHD;;AAKAN,EAAAA,OAAO,CAACI,GAAD,EAAM,UAASE,KAAT,EAAgBG,GAAhB,EAAqB;AAC9BP,IAAAA,WAAW,CAACO,GAAD,EAAMH,KAAN,EAAaD,KAAb,CAAX;AACH,GAFM,CAAP;AAIA,SAAOM,KAAK,CAACG,IAAN,CAAW,GAAX,EAAgBC,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,CAAP;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,wBAAjB","sourcesContent":["'use strict';\n\nvar isArray = require('lodash/isArray');\nvar forEach = require('lodash/forEach');\nvar isNil = require('lodash/isNil');\n\n// Adapted from jQuery.param:\n// https://github.com/jquery/jquery/blob/2.2-stable/src/serialize.js\nfunction buildParams(prefix, obj, addFn) {\n    if (isArray(obj)) {\n        // Serialize array item.\n        forEach(obj, function(value, index) {\n            if (/\\[\\]$/.test(prefix)) {\n                // Treat each array item as a scalar.\n                addFn(prefix, value);\n            } else {\n                // Item is non-scalar (array or object), encode its numeric index.\n                buildParams(\n                    prefix + '[' + (typeof value === 'object' && value !== null ? index : '') + ']',\n                    value,\n                    addFn\n                );\n            }\n        });\n    } else if (typeof obj === 'object') {\n        // Serialize object item.\n        forEach(obj, function(value, key) {\n            buildParams(prefix + '[' + key + ']', value, addFn);\n        });\n    } else {\n        // Serialize scalar item.\n        addFn(prefix, obj);\n    }\n}\n\nfunction objectToQueryParamString(obj) {\n    var parts = [];\n    var addFn = function(key, value) {\n        value = isNil(value) ? '' : value;\n        parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    };\n\n    forEach(obj, function(value, key) {\n        buildParams(key, value, addFn);\n    });\n\n    return parts.join('&').replace(/%20/g, '+');\n}\n\nmodule.exports = objectToQueryParamString;\n"]},"metadata":{},"sourceType":"script"}