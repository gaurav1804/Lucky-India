{"ast":null,"code":"'use strict';\n\nvar forEach = require('lodash/forEach');\n\nvar get = require('lodash/get');\n\nvar assign = require('lodash/assign');\n\nvar isPlainObject = require('lodash/isPlainObject');\n\nvar fetch = require('./fetch');\n\nvar AbortController = require('./abort-controller');\n\nvar objectToQueryParamString = require('./object_to_query_param_string');\n\nvar AirtableError = require('./airtable_error');\n\nvar Table = require('./table');\n\nvar HttpHeaders = require('./http_headers');\n\nvar runAction = require('./run_action');\n\nvar packageVersion = require('./package_version');\n\nvar exponentialBackoffWithJitter = require('./exponential_backoff_with_jitter');\n\nvar userAgent = 'Airtable.js/' + packageVersion;\n\nfunction Base(airtable, baseId) {\n  this._airtable = airtable;\n  this._id = baseId;\n}\n\nBase.prototype.table = function (tableName) {\n  return new Table(this, null, tableName);\n};\n\nBase.prototype.makeRequest = function (options) {\n  var that = this;\n  options = options || {};\n  var method = get(options, 'method', 'GET').toUpperCase();\n  var url = this._airtable._endpointUrl + '/v' + this._airtable._apiVersionMajor + '/' + this._id + get(options, 'path', '/') + '?' + objectToQueryParamString(get(options, 'qs', {}));\n  var controller = new AbortController();\n  var requestOptions = {\n    method: method,\n    headers: this._getRequestHeaders(get(options, 'headers', {})),\n    signal: controller.signal\n  };\n\n  if ('body' in options && _canRequestMethodIncludeBody(method)) {\n    requestOptions.body = JSON.stringify(options.body);\n  }\n\n  var timeout = setTimeout(function () {\n    controller.abort();\n  }, this._airtable.requestTimeout);\n  return new Promise(function (resolve, reject) {\n    fetch(url, requestOptions).then(function (resp) {\n      clearTimeout(timeout);\n      resp.statusCode = resp.status;\n\n      if (resp.status === 429 && !that._airtable._noRetryIfRateLimited) {\n        var numAttempts = get(options, '_numAttempts', 0);\n        var backoffDelayMs = exponentialBackoffWithJitter(numAttempts);\n        setTimeout(function () {\n          var newOptions = assign({}, options, {\n            _numAttempts: numAttempts + 1\n          });\n          that.makeRequest(newOptions).then(resolve).catch(reject);\n        }, backoffDelayMs);\n      } else {\n        resp.json().then(function (body) {\n          var err = that._checkStatusForError(resp.status, body) || _getErrorForNonObjectBody(resp.status, body);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve({\n              statusCode: resp.status,\n              headers: resp.headers,\n              body: body\n            });\n          }\n        }).catch(function () {\n          var err = _getErrorForNonObjectBody(resp.status);\n\n          reject(err);\n        });\n      }\n    }).catch(function (err) {\n      clearTimeout(timeout);\n      err = new AirtableError('CONNECTION_ERROR', err.message, null);\n      reject(err);\n    });\n  });\n}; // This method is deprecated.\n\n\nBase.prototype.runAction = function (method, path, queryParams, bodyData, callback) {\n  runAction(this, method, path, queryParams, bodyData, callback, 0);\n};\n\nBase.prototype._getRequestHeaders = function (headers) {\n  var result = new HttpHeaders();\n  result.set('Authorization', 'Bearer ' + this._airtable._apiKey);\n  result.set('User-Agent', userAgent);\n  result.set('Content-Type', 'application/json');\n  forEach(headers, function (headerValue, headerKey) {\n    result.set(headerKey, headerValue);\n  });\n  return result.toJSON();\n};\n\nBase.prototype._checkStatusForError = function (statusCode, body) {\n  if (statusCode === 401) {\n    return new AirtableError('AUTHENTICATION_REQUIRED', 'You should provide valid api key to perform this operation', statusCode);\n  } else if (statusCode === 403) {\n    return new AirtableError('NOT_AUTHORIZED', 'You are not authorized to perform this operation', statusCode);\n  } else if (statusCode === 404) {\n    return function () {\n      var message = body && body.error && body.error.message ? body.error.message : 'Could not find what you are looking for';\n      return new AirtableError('NOT_FOUND', message, statusCode);\n    }();\n  } else if (statusCode === 413) {\n    return new AirtableError('REQUEST_TOO_LARGE', 'Request body is too large', statusCode);\n  } else if (statusCode === 422) {\n    return function () {\n      var type = body && body.error && body.error.type ? body.error.type : 'UNPROCESSABLE_ENTITY';\n      var message = body && body.error && body.error.message ? body.error.message : 'The operation cannot be processed';\n      return new AirtableError(type, message, statusCode);\n    }();\n  } else if (statusCode === 429) {\n    return new AirtableError('TOO_MANY_REQUESTS', 'You have made too many requests in a short period of time. Please retry your request later', statusCode);\n  } else if (statusCode === 500) {\n    return new AirtableError('SERVER_ERROR', 'Try again. If the problem persists, contact support.', statusCode);\n  } else if (statusCode === 503) {\n    return new AirtableError('SERVICE_UNAVAILABLE', 'The service is temporarily unavailable. Please retry shortly.', statusCode);\n  } else if (statusCode >= 400) {\n    return function () {\n      var type = body && body.error && body.error.type ? body.error.type : 'UNEXPECTED_ERROR';\n      var message = body && body.error && body.error.message ? body.error.message : 'An unexpected error occurred';\n      return new AirtableError(type, message, statusCode);\n    }();\n  } else {\n    return null;\n  }\n};\n\nBase.prototype.doCall = function (tableName) {\n  return this.table(tableName);\n};\n\nBase.prototype.getId = function () {\n  return this._id;\n};\n\nBase.createFunctor = function (airtable, baseId) {\n  var base = new Base(airtable, baseId);\n\n  var baseFn = function () {\n    return base.doCall.apply(base, arguments);\n  };\n\n  forEach(['table', 'makeRequest', 'runAction', 'getId'], function (baseMethod) {\n    baseFn[baseMethod] = base[baseMethod].bind(base);\n  });\n  baseFn._base = base;\n  baseFn.tables = base.tables;\n  return baseFn;\n};\n\nfunction _canRequestMethodIncludeBody(method) {\n  return method !== 'GET' && method !== 'DELETE';\n}\n\nfunction _getErrorForNonObjectBody(statusCode, body) {\n  if (isPlainObject(body)) {\n    return null;\n  } else {\n    return new AirtableError('UNEXPECTED_ERROR', 'The response from Airtable was invalid JSON. Please try again soon.', statusCode);\n  }\n}\n\nmodule.exports = Base;","map":{"version":3,"sources":["/Users/gauravsingh/Desktop/projects/Lucky-India/node_modules/airtable/lib/base.js"],"names":["forEach","require","get","assign","isPlainObject","fetch","AbortController","objectToQueryParamString","AirtableError","Table","HttpHeaders","runAction","packageVersion","exponentialBackoffWithJitter","userAgent","Base","airtable","baseId","_airtable","_id","prototype","table","tableName","makeRequest","options","that","method","toUpperCase","url","_endpointUrl","_apiVersionMajor","controller","requestOptions","headers","_getRequestHeaders","signal","_canRequestMethodIncludeBody","body","JSON","stringify","timeout","setTimeout","abort","requestTimeout","Promise","resolve","reject","then","resp","clearTimeout","statusCode","status","_noRetryIfRateLimited","numAttempts","backoffDelayMs","newOptions","_numAttempts","catch","json","err","_checkStatusForError","_getErrorForNonObjectBody","message","path","queryParams","bodyData","callback","result","set","_apiKey","headerValue","headerKey","toJSON","error","type","doCall","getId","createFunctor","base","baseFn","apply","arguments","baseMethod","bind","_base","tables","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar forEach = require('lodash/forEach');\nvar get = require('lodash/get');\nvar assign = require('lodash/assign');\nvar isPlainObject = require('lodash/isPlainObject');\nvar fetch = require('./fetch');\nvar AbortController = require('./abort-controller');\n\nvar objectToQueryParamString = require('./object_to_query_param_string');\nvar AirtableError = require('./airtable_error');\nvar Table = require('./table');\nvar HttpHeaders = require('./http_headers');\nvar runAction = require('./run_action');\nvar packageVersion = require('./package_version');\nvar exponentialBackoffWithJitter = require('./exponential_backoff_with_jitter');\n\nvar userAgent = 'Airtable.js/' + packageVersion;\n\nfunction Base(airtable, baseId) {\n    this._airtable = airtable;\n    this._id = baseId;\n}\n\nBase.prototype.table = function(tableName) {\n    return new Table(this, null, tableName);\n};\n\nBase.prototype.makeRequest = function(options) {\n    var that = this;\n\n    options = options || {};\n\n    var method = get(options, 'method', 'GET').toUpperCase();\n\n    var url =\n        this._airtable._endpointUrl +\n        '/v' +\n        this._airtable._apiVersionMajor +\n        '/' +\n        this._id +\n        get(options, 'path', '/') +\n        '?' +\n        objectToQueryParamString(get(options, 'qs', {}));\n\n    var controller = new AbortController();\n\n    var requestOptions = {\n        method: method,\n        headers: this._getRequestHeaders(get(options, 'headers', {})),\n        signal: controller.signal,\n    };\n\n    if ('body' in options && _canRequestMethodIncludeBody(method)) {\n        requestOptions.body = JSON.stringify(options.body);\n    }\n\n    var timeout = setTimeout(function() {\n        controller.abort();\n    }, this._airtable.requestTimeout);\n\n    return new Promise(function(resolve, reject) {\n        fetch(url, requestOptions)\n            .then(function(resp) {\n                clearTimeout(timeout);\n                resp.statusCode = resp.status;\n                if (resp.status === 429 && !that._airtable._noRetryIfRateLimited) {\n                    var numAttempts = get(options, '_numAttempts', 0);\n                    var backoffDelayMs = exponentialBackoffWithJitter(numAttempts);\n                    setTimeout(function() {\n                        var newOptions = assign({}, options, {\n                            _numAttempts: numAttempts + 1,\n                        });\n                        that.makeRequest(newOptions)\n                            .then(resolve)\n                            .catch(reject);\n                    }, backoffDelayMs);\n                } else {\n                    resp.json()\n                        .then(function(body) {\n                            var err =\n                                that._checkStatusForError(resp.status, body) ||\n                                _getErrorForNonObjectBody(resp.status, body);\n\n                            if (err) {\n                                reject(err);\n                            } else {\n                                resolve({\n                                    statusCode: resp.status,\n                                    headers: resp.headers,\n                                    body: body,\n                                });\n                            }\n                        })\n                        .catch(function() {\n                            var err = _getErrorForNonObjectBody(resp.status);\n                            reject(err);\n                        });\n                }\n            })\n            .catch(function(err) {\n                clearTimeout(timeout);\n                err = new AirtableError('CONNECTION_ERROR', err.message, null);\n                reject(err);\n            });\n    });\n};\n\n// This method is deprecated.\nBase.prototype.runAction = function(method, path, queryParams, bodyData, callback) {\n    runAction(this, method, path, queryParams, bodyData, callback, 0);\n};\n\nBase.prototype._getRequestHeaders = function(headers) {\n    var result = new HttpHeaders();\n\n    result.set('Authorization', 'Bearer ' + this._airtable._apiKey);\n    result.set('User-Agent', userAgent);\n    result.set('Content-Type', 'application/json');\n    forEach(headers, function(headerValue, headerKey) {\n        result.set(headerKey, headerValue);\n    });\n\n    return result.toJSON();\n};\n\nBase.prototype._checkStatusForError = function(statusCode, body) {\n    if (statusCode === 401) {\n        return new AirtableError(\n            'AUTHENTICATION_REQUIRED',\n            'You should provide valid api key to perform this operation',\n            statusCode\n        );\n    } else if (statusCode === 403) {\n        return new AirtableError(\n            'NOT_AUTHORIZED',\n            'You are not authorized to perform this operation',\n            statusCode\n        );\n    } else if (statusCode === 404) {\n        return (function() {\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'Could not find what you are looking for';\n            return new AirtableError('NOT_FOUND', message, statusCode);\n        })();\n    } else if (statusCode === 413) {\n        return new AirtableError('REQUEST_TOO_LARGE', 'Request body is too large', statusCode);\n    } else if (statusCode === 422) {\n        return (function() {\n            var type =\n                body && body.error && body.error.type ? body.error.type : 'UNPROCESSABLE_ENTITY';\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'The operation cannot be processed';\n            return new AirtableError(type, message, statusCode);\n        })();\n    } else if (statusCode === 429) {\n        return new AirtableError(\n            'TOO_MANY_REQUESTS',\n            'You have made too many requests in a short period of time. Please retry your request later',\n            statusCode\n        );\n    } else if (statusCode === 500) {\n        return new AirtableError(\n            'SERVER_ERROR',\n            'Try again. If the problem persists, contact support.',\n            statusCode\n        );\n    } else if (statusCode === 503) {\n        return new AirtableError(\n            'SERVICE_UNAVAILABLE',\n            'The service is temporarily unavailable. Please retry shortly.',\n            statusCode\n        );\n    } else if (statusCode >= 400) {\n        return (function() {\n            var type = body && body.error && body.error.type ? body.error.type : 'UNEXPECTED_ERROR';\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'An unexpected error occurred';\n            return new AirtableError(type, message, statusCode);\n        })();\n    } else {\n        return null;\n    }\n};\n\nBase.prototype.doCall = function(tableName) {\n    return this.table(tableName);\n};\n\nBase.prototype.getId = function() {\n    return this._id;\n};\n\nBase.createFunctor = function(airtable, baseId) {\n    var base = new Base(airtable, baseId);\n    var baseFn = function() {\n        return base.doCall.apply(base, arguments);\n    };\n    forEach(['table', 'makeRequest', 'runAction', 'getId'], function(baseMethod) {\n        baseFn[baseMethod] = base[baseMethod].bind(base);\n    });\n    baseFn._base = base;\n    baseFn.tables = base.tables;\n    return baseFn;\n};\n\nfunction _canRequestMethodIncludeBody(method) {\n    return method !== 'GET' && method !== 'DELETE';\n}\n\nfunction _getErrorForNonObjectBody(statusCode, body) {\n    if (isPlainObject(body)) {\n        return null;\n    } else {\n        return new AirtableError(\n            'UNEXPECTED_ERROR',\n            'The response from Airtable was invalid JSON. Please try again soon.',\n            statusCode\n        );\n    }\n}\n\nmodule.exports = Base;\n"]},"metadata":{},"sourceType":"script"}