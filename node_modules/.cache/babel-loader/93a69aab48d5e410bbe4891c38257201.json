{"ast":null,"code":"'use strict';\n\nvar Base = require('./base');\n\nvar Record = require('./record');\n\nvar Table = require('./table');\n\nvar AirtableError = require('./airtable_error');\n\nfunction Airtable(opts) {\n  opts = opts || {};\n  var defaultConfig = Airtable.default_config();\n  var apiVersion = opts.apiVersion || Airtable.apiVersion || defaultConfig.apiVersion;\n  Object.defineProperties(this, {\n    _apiKey: {\n      value: opts.apiKey || Airtable.apiKey || defaultConfig.apiKey\n    },\n    _endpointUrl: {\n      value: opts.endpointUrl || Airtable.endpointUrl || defaultConfig.endpointUrl\n    },\n    _apiVersion: {\n      value: apiVersion\n    },\n    _apiVersionMajor: {\n      value: apiVersion.split('.')[0]\n    },\n    _noRetryIfRateLimited: {\n      value: opts.noRetryIfRateLimited || Airtable.noRetryIfRateLimited || defaultConfig.noRetryIfRateLimited\n    }\n  });\n  this.requestTimeout = opts.requestTimeout || defaultConfig.requestTimeout;\n\n  if (!this._apiKey) {\n    throw new Error('An API key is required to connect to Airtable');\n  }\n}\n\nAirtable.prototype.base = function (baseId) {\n  return Base.createFunctor(this, baseId);\n};\n\nAirtable.default_config = function () {\n  return {\n    endpointUrl: process.env.AIRTABLE_ENDPOINT_URL || 'https://api.airtable.com',\n    apiVersion: '0.1.0',\n    apiKey: process.env.AIRTABLE_API_KEY,\n    noRetryIfRateLimited: false,\n    requestTimeout: 300 * 1000 // 5 minutes\n\n  };\n};\n\nAirtable.configure = function (opts) {\n  Airtable.apiKey = opts.apiKey;\n  Airtable.endpointUrl = opts.endpointUrl;\n  Airtable.apiVersion = opts.apiVersion;\n  Airtable.noRetryIfRateLimited = opts.noRetryIfRateLimited;\n};\n\nAirtable.base = function (baseId) {\n  return new Airtable().base(baseId);\n};\n\nAirtable.Base = Base;\nAirtable.Record = Record;\nAirtable.Table = Table;\nAirtable.Error = AirtableError;\nmodule.exports = Airtable;","map":{"version":3,"sources":["/Users/gauravsingh/Desktop/projects/Lucky-India/node_modules/airtable/lib/airtable.js"],"names":["Base","require","Record","Table","AirtableError","Airtable","opts","defaultConfig","default_config","apiVersion","Object","defineProperties","_apiKey","value","apiKey","_endpointUrl","endpointUrl","_apiVersion","_apiVersionMajor","split","_noRetryIfRateLimited","noRetryIfRateLimited","requestTimeout","Error","prototype","base","baseId","createFunctor","process","env","AIRTABLE_ENDPOINT_URL","AIRTABLE_API_KEY","configure","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAA3B;;AAEA,SAASI,QAAT,CAAkBC,IAAlB,EAAwB;AACpBA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIC,aAAa,GAAGF,QAAQ,CAACG,cAAT,EAApB;AAEA,MAAIC,UAAU,GAAGH,IAAI,CAACG,UAAL,IAAmBJ,QAAQ,CAACI,UAA5B,IAA0CF,aAAa,CAACE,UAAzE;AAEAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAEP,IAAI,CAACQ,MAAL,IAAeT,QAAQ,CAACS,MAAxB,IAAkCP,aAAa,CAACO;AADlD,KADiB;AAI1BC,IAAAA,YAAY,EAAE;AACVF,MAAAA,KAAK,EAAEP,IAAI,CAACU,WAAL,IAAoBX,QAAQ,CAACW,WAA7B,IAA4CT,aAAa,CAACS;AADvD,KAJY;AAO1BC,IAAAA,WAAW,EAAE;AACTJ,MAAAA,KAAK,EAAEJ;AADE,KAPa;AAU1BS,IAAAA,gBAAgB,EAAE;AACdL,MAAAA,KAAK,EAAEJ,UAAU,CAACU,KAAX,CAAiB,GAAjB,EAAsB,CAAtB;AADO,KAVQ;AAa1BC,IAAAA,qBAAqB,EAAE;AACnBP,MAAAA,KAAK,EACDP,IAAI,CAACe,oBAAL,IACAhB,QAAQ,CAACgB,oBADT,IAEAd,aAAa,CAACc;AAJC;AAbG,GAA9B;AAqBA,OAAKC,cAAL,GAAsBhB,IAAI,CAACgB,cAAL,IAAuBf,aAAa,CAACe,cAA3D;;AAEA,MAAI,CAAC,KAAKV,OAAV,EAAmB;AACf,UAAM,IAAIW,KAAJ,CAAU,+CAAV,CAAN;AACH;AACJ;;AAEDlB,QAAQ,CAACmB,SAAT,CAAmBC,IAAnB,GAA0B,UAASC,MAAT,EAAiB;AACvC,SAAO1B,IAAI,CAAC2B,aAAL,CAAmB,IAAnB,EAAyBD,MAAzB,CAAP;AACH,CAFD;;AAIArB,QAAQ,CAACG,cAAT,GAA0B,YAAW;AACjC,SAAO;AACHQ,IAAAA,WAAW,EAAEY,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqC,0BAD/C;AAEHrB,IAAAA,UAAU,EAAE,OAFT;AAGHK,IAAAA,MAAM,EAAEc,OAAO,CAACC,GAAR,CAAYE,gBAHjB;AAIHV,IAAAA,oBAAoB,EAAE,KAJnB;AAKHC,IAAAA,cAAc,EAAE,MAAM,IALnB,CAKyB;;AALzB,GAAP;AAOH,CARD;;AAUAjB,QAAQ,CAAC2B,SAAT,GAAqB,UAAS1B,IAAT,EAAe;AAChCD,EAAAA,QAAQ,CAACS,MAAT,GAAkBR,IAAI,CAACQ,MAAvB;AACAT,EAAAA,QAAQ,CAACW,WAAT,GAAuBV,IAAI,CAACU,WAA5B;AACAX,EAAAA,QAAQ,CAACI,UAAT,GAAsBH,IAAI,CAACG,UAA3B;AACAJ,EAAAA,QAAQ,CAACgB,oBAAT,GAAgCf,IAAI,CAACe,oBAArC;AACH,CALD;;AAOAhB,QAAQ,CAACoB,IAAT,GAAgB,UAASC,MAAT,EAAiB;AAC7B,SAAO,IAAIrB,QAAJ,GAAeoB,IAAf,CAAoBC,MAApB,CAAP;AACH,CAFD;;AAIArB,QAAQ,CAACL,IAAT,GAAgBA,IAAhB;AACAK,QAAQ,CAACH,MAAT,GAAkBA,MAAlB;AACAG,QAAQ,CAACF,KAAT,GAAiBA,KAAjB;AACAE,QAAQ,CAACkB,KAAT,GAAiBnB,aAAjB;AAEA6B,MAAM,CAACC,OAAP,GAAiB7B,QAAjB","sourcesContent":["'use strict';\n\nvar Base = require('./base');\nvar Record = require('./record');\nvar Table = require('./table');\nvar AirtableError = require('./airtable_error');\n\nfunction Airtable(opts) {\n    opts = opts || {};\n\n    var defaultConfig = Airtable.default_config();\n\n    var apiVersion = opts.apiVersion || Airtable.apiVersion || defaultConfig.apiVersion;\n\n    Object.defineProperties(this, {\n        _apiKey: {\n            value: opts.apiKey || Airtable.apiKey || defaultConfig.apiKey,\n        },\n        _endpointUrl: {\n            value: opts.endpointUrl || Airtable.endpointUrl || defaultConfig.endpointUrl,\n        },\n        _apiVersion: {\n            value: apiVersion,\n        },\n        _apiVersionMajor: {\n            value: apiVersion.split('.')[0],\n        },\n        _noRetryIfRateLimited: {\n            value:\n                opts.noRetryIfRateLimited ||\n                Airtable.noRetryIfRateLimited ||\n                defaultConfig.noRetryIfRateLimited,\n        },\n    });\n\n    this.requestTimeout = opts.requestTimeout || defaultConfig.requestTimeout;\n\n    if (!this._apiKey) {\n        throw new Error('An API key is required to connect to Airtable');\n    }\n}\n\nAirtable.prototype.base = function(baseId) {\n    return Base.createFunctor(this, baseId);\n};\n\nAirtable.default_config = function() {\n    return {\n        endpointUrl: process.env.AIRTABLE_ENDPOINT_URL || 'https://api.airtable.com',\n        apiVersion: '0.1.0',\n        apiKey: process.env.AIRTABLE_API_KEY,\n        noRetryIfRateLimited: false,\n        requestTimeout: 300 * 1000, // 5 minutes\n    };\n};\n\nAirtable.configure = function(opts) {\n    Airtable.apiKey = opts.apiKey;\n    Airtable.endpointUrl = opts.endpointUrl;\n    Airtable.apiVersion = opts.apiVersion;\n    Airtable.noRetryIfRateLimited = opts.noRetryIfRateLimited;\n};\n\nAirtable.base = function(baseId) {\n    return new Airtable().base(baseId);\n};\n\nAirtable.Base = Base;\nAirtable.Record = Record;\nAirtable.Table = Table;\nAirtable.Error = AirtableError;\n\nmodule.exports = Airtable;\n"]},"metadata":{},"sourceType":"script"}